<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.dao.SaleOrderMapper">
    <select id="getSaleOrderListByPage" resultType="XsOrder">
        SELECT o.id,
        orderNo,
        orderDate,
        totalNumber,
        totalPrice,
        bankAccountId,
        remark,
        editStatus,
        cancelStatus,
        o.createBy,
        o.updateBy,
        o.updateDate,
        b.bandCount AS bankAccountName,
        c.userName AS createByName,
        u.userName AS updateByName
        FROM xs_order o
        LEFT JOIN sys_user c ON o.createBy = c.userId AND c.isDel = 0
        LEFT JOIN sys_user u ON o.updateBy = u.userId AND u.isDel = 0
        JOIN bank_account b ON o.bankAccountId = b.id AND b.isDel = 0
        WHERE o.isDelete = 0 and o.type=0
        <if test="orderNo!=null and orderNo!=''">and orderNo like concat('%',#{orderNo},'%')</if>
<!--        <if test="orderDate!=null and orderDate!=''">and orderDate between #{orderDateBegin} and #{orderDateEnd}</if>-->
        order by orderDate DESC
    </select>

    <select id="getSaleOrderByOrderNo" resultType="XsOrder">
        SELECT o.id,
               orderNo,
               orderDate,
               totalNumber,
               totalPrice,
               bankAccountId,
               remark,
               o.createBy,
               o.updateBy,
               o.updateDate,
               c.userName AS createByName,
               ba.bandCount AS bankAccountName,
               ba.`name`,
               ba.belongBank
        FROM xs_order o,sys_user c,bank_account ba
        WHERE o.createBy = c.userId and o.bankAccountId=ba.id and o.isDelete = 0 and c.isDel=0 and ba.isDel=0
        and orderNo=#{orderNo}
    </select>

    <select id="getSaleOrderDetailByOrderNo" resultType="BaseMedicine">
        select b.id,b.name,categoryId,unitId,salePrice,specification,warning,
               un.name as unitName,mc.name as categoryName,om.medicineId,om.quantity,om.totalPrice,om.batchCode,kc.quantity as stock
        from base_medicine b,base_unit un,base_medicine_category mc,order_medicine om,kc_medicine kc
        where b.categoryId=mc.id and b.unitId=un.id and b.id=om.medicineId and kc.batchCode=om.batchCode and kc.medicineId=om.medicineId
          and b.isDel=0 and un.isDel=0 and mc.isDel=0 and om.isDel=0
          and om.code=#{orderNo}
    </select>

<!--    <insert id="addSaleOrder" parameterType="XsOrder">-->
<!--        INSERT INTO `pharmacy`.`xs_order` (`orderNo`, `orderDate`, `createBy`, `type`, `totalPrice`, `totalNumber`, `bankAccountId`, `remark`, `updateBy`, `updateDate`, `editStatus`)-->
<!--        VALUES (#{orderNo},#{orderDate},#{createBy},#{type}, #{totalPrice}, #{totalNumber}, #{bankAccountId}, #{remark}, #{updateBy}, #{updateDate},#{editStatus});-->
<!--    </insert>-->

    <insert id="addSaleOrderDetail" parameterType="OrderMedicine">
        INSERT INTO `pharmacy`.`order_medicine` (`code`, `medicineId`, `quantity`, `totalPrice`,`batchCode`)
        VALUES (#{code},#{medicineId},#{quantity},#{totalPrice},#{batchCode});
    </insert>

    <update id="updateSaleOrderDetail" parameterType="OrderMedicine">
        UPDATE `pharmacy`.`order_medicine` SET
        `batchCode` = #{batchCode}, `medicineId` = #{medicineId}, `quantity` = #{quantity},
        `totalPrice` = #{totalPrice} WHERE `code` = #{code}
    </update>

    <update id="deleteOrderDetailByOrderNo">
        update order_medicine set isDel=1 where code=#{orderNo}
    </update>

    <update id="cancelOrderDetailByOrderNo">
        update order_medicine set isCancel=1 where code=#{orderNo}
    </update>
</mapper>