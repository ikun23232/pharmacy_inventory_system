<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.kgc.dao.SysUserMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.kgc.entity.SysUser">
        <id column="userId" property="userid" />
        <result column="userName" property="username" />
        <result column="password" property="password" />
        <result column="age" property="age" />
        <result column="sex" property="sex" />
        <result column="createDate" property="createdate" />
        <result column="createBy" property="createby" />
        <result column="updateDate" property="updatedate" />
        <result column="updateBy" property="updateby" />
        <result column="isDel" property="isdel" />
        <result column="isState" property="isstate" />
        <result column="nickName" property="nickname" />
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        <if test="true">
        userId, userName, password, age, sex, createDate, createBy, updateDate, updateBy, isDel, isAdmin, nickName
        </if>
    </sql>
    <select id="existUser"  resultType="com.kgc.entity.SysUser">
        select userId, userName, password, age, sex, createDate, createBy, updateDate, updateBy, isDel, isState, nickName, email    from sys_user
        where
            userName = #{username}
          <if test="id>0">
              and userId NOT IN (#{id})
          </if>
          and isDel = 0
    </select>

    <select id="getAllUser"  resultType="com.kgc.entity.SysUser">
        select userId, userName, password, age, sex, createDate, createBy, updateDate, updateBy, isDel, isState, nickName, email    from sys_user
        where isDel = 0
    </select>

    <select id="selectUser"  resultType="com.kgc.entity.SysUser">
        select userId, userName, password, age, sex, createDate, createBy, updateDate, updateBy, isDel, isState, nickName, email    from sys_user
        where isDel = 0
    </select>
    <select id="login"  resultType="com.kgc.entity.SysUser">
        select userId, userName, password, age, sex, createDate, createBy, updateDate, updateBy, isDel, isState, nickName, email    from sys_user
        where
            userName = #{username}
          and password = #{password}
          and isDel = 0
    </select>
    <select id="getUsersListByPage" resultType="com.kgc.entity.SysUser">
        SELECT
        u.userId,
        u.userName,
        u.password,
        u.age,
        u.sex,
        u.createDate,
        u.createBy,
        u.updateDate,
        u.updateBy,
        GROUP_CONCAT(r.roleId) as roleIds,
        u.isDel,
        u.isState,
        u.nickName,
        u.email
        FROM sys_user u
        LEFT JOIN sys_userrole ur ON u.userId = ur.userId
        LEFT JOIN sys_role r ON ur.roleId = r.roleId

        <where>
            u.isDel = 0
            <if test="username != null and username != ''">
                and  u.userName like concat("%",#{username},"%")
            </if>

            <if test="sex ==1||sex==0">
                and  u.sex = #{sex}
            </if>

            <if test="isstate ==1||isstate==0">
                and  u.isState = #{isstate}
            </if>
        </where>
        GROUP BY u.userId, u.userName, u.password, u.age, u.sex, u.createDate, u.createBy, u.updateDate, u.updateBy, u.isDel, u.isState, u.nickName, u.email
        <if test="roleId >0">
            HAVING FIND_IN_SET(#{roleId}, roleIds)
        </if>
    </select>



    <select id="listByMenuId" resultType="com.kgc.entity.SysUser">

        SELECT DISTINCT
            su.*
        FROM
            sys_userrole ur
                LEFT JOIN sys_rolemenu rm ON ur.roleId = rm.roleId
                LEFT JOIN sys_user su ON ur.userId = su.userId
        WHERE
            rm.menuId = #{menuId}
    </select>



</mapper>
